@model OrDuDragon.Models.Question
@{
    ViewBag.Title = "Create";
}
<style>


    h1 {
        text-align: center;
        opacity: inherit;
    }

  
</style>


<div class="container">
 

    @using (Html.BeginForm("Create", "Questions", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <h2>Création d'une Question</h2>

        @Html.AntiForgeryToken()
        <div class="row">
            <div class="form-horizontal">
                <div class="row col-md-12">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.Enoncer, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Enoncer, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Enoncer, "", new { @class = "text-danger" })


                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Reponce1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Reponce1, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Reponce1, "", new { @class = "text-danger" })
                            <input type="checkbox" name="good" value="1">
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Reponce2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Reponce2, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Reponce2, "", new { @class = "text-danger" })
                            <input type="checkbox" name="good" value="2">
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Reponce3, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Reponce3, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Reponce3, "", new { @class = "text-danger" })
                            <input type="checkbox" name="good" value="3">

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Reponce4, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Reponce4, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.Reponce4, "", new { @class = "text-danger" })
                            <input type="checkbox" name="good" value="4">
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-2">
            

           
            
        </div>

        <div class="row">
            <div class="col-md-offset-9 col-md-6">
                <input type="button" class="btn btn-cancel btn-primary" value="Annuler" onclick="location.href='@Url.Action("Index", "Questions")'" />
                <input type="submit" id="submit" value="Ajouter la question" class="btn btn-primary" />
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $("input:checkbox").on('click', function () {
            var $box = $(this);
            if ($box.is(":checked")) {
                var group = "input:checkbox[name='" + $box.attr("name") + "']";
                $(group).prop("checked", false);
                $box.prop("checked", true);
            } else {
                $box.prop("checked", false);
            }
        });
    </script>
}
